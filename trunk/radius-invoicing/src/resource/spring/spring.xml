<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName" default-lazy-init="false">
	<context:annotation-config />
	<context:component-scan base-package="com.radius.invoicing"></context:component-scan>
	
	
	<bean id="propertyConfigHelper" class="com.radius.base.helper.PropertyConfigHelper">
		<property name="locations">
			<list>
				<value>classpath:property/test-*.properties</value>
			</list>
		</property>
	</bean>
	
	
	 <!-- DataSource -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${radius.jdbc.driver}" />
    <property name="url" value="${radius.jdbc.url}" />
    <property name="username" value="${radius.jdbc.user}" />
    <property name="password" value="${radius.jdbc.password}" />
    <!-- 连接池启动时的初始值 -->
    <property name="initialSize" value="${radius.jdbc.initConnections}" />
    <!-- 连接池的最大值 -->
    <property name="maxActive" value="${radius.jdbc.poolSize}" />
    <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
    <property name="maxIdle" value="2" />
    <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
    <property name="minIdle" value="1" />
    <!-- 是否自动回收超时连接 -->
    <property name="removeAbandoned" value="true" />
    <!--  设置被遗弃的连接的超时的时间（以秒数为单位），即当一个连接被遗弃的时间超过设置的时间，则它会自动转换成可利用的连接。默认的超时时间是300秒-->
    <property name="removeAbandonedTimeout" value="30" />
    <!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
    <property name="logAbandoned" value="true" />
    <property name="validationQuery" value="select 1" />
    <property name="testOnBorrow" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="timeBetweenEvictionRunsMillis" value="3600000" />
    <property name="minEvictableIdleTimeMillis" value="18000000" />
  </bean>
	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:ibatis/sql-map-config.xml</value>
		</property>
		<property name="mappingLocations">			
				<value>classpath:/cn/radius/virtual/**/*SqlMap.xml</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
	
	<!-- 配置事务切面 -->
	<tx:advice id="transactionAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(* com.radius.invoicing.**.service.impl.*Service*.*(..))" id="txPoint" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="txPoint" />
	</aop:config>
	
	
	
	</beans>